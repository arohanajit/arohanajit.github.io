# src

## Directory Tree
├── .DS_Store
├── App.css
├── App.js
├── DSHomePage.js
├── SDEHomePage.js
├── components
│   ├── .DS_Store
│   ├── DSConstant
│   │   ├── LeftConstantDS.jsx
│   │   └── RightConstantDS.jsx
│   ├── MainComponent.jsx
│   ├── SDEConstant
│   │   ├── LeftConstantSDE.jsx
│   │   └── RightConstantSDE.jsx
│   ├── fieldsDS
│   │   ├── About.jsx
│   │   ├── Education.jsx
│   │   ├── Experience.jsx
│   │   └── Projects.jsx
│   ├── fieldsSDE
│   │   ├── About.jsx
│   │   ├── Education.jsx
│   │   ├── Experience.jsx
│   │   └── Projects.jsx
│   ├── utils
│   │   ├── ExperienceCard.jsx
│   │   ├── ProjectCard.jsx
│   │   └── SectionScroll.jsx
│   └── utilsDS
│       ├── ExperienceCard.jsx
│       ├── ProjectCard.jsx
│       └── SectionScroll.jsx
├── images
│   ├── AlgoB.jpeg
│   ├── FWMS.jpeg
│   ├── MovieR.jpeg
│   ├── ProjectIcon.png
│   ├── SpendShare.jpeg
│   ├── TV.webp
│   ├── car.png
│   ├── face.webp
│   └── urban.webp
├── index.css
└── index.js


## File List
.DS_Store
DSHomePage.js
App.css
index.js
index.css
SDEHomePage.js
App.js
images/urban.webp
images/MovieR.jpeg
images/ProjectIcon.png
images/face.webp
images/TV.webp
images/SpendShare.jpeg
images/car.png
images/AlgoB.jpeg
images/FWMS.jpeg
components/.DS_Store
components/MainComponent.jsx
components/utilsDS/SectionScroll.jsx
components/utilsDS/ProjectCard.jsx
components/utilsDS/ExperienceCard.jsx
components/fieldsDS/About.jsx
components/fieldsDS/Education.jsx
components/fieldsDS/Experience.jsx
components/fieldsDS/Projects.jsx
components/utils/SectionScroll.jsx
components/utils/ProjectCard.jsx
components/utils/ExperienceCard.jsx
components/SDEConstant/RightConstantSDE.jsx
components/SDEConstant/LeftConstantSDE.jsx
components/DSConstant/RightConstantDS.jsx
components/DSConstant/LeftConstantDS.jsx
components/fieldsSDE/About.jsx
components/fieldsSDE/Education.jsx
components/fieldsSDE/Experience.jsx
components/fieldsSDE/Projects.jsx

### File: DSHomePage.js

import React from 'react';
import MainComponent from './components/MainComponent';
import LeftConstantDS from './components/DSConstant/LeftConstantDS';
import RightConstantDS from './components/DSConstant/RightConstantDS';

const DSHomePage = () => {
  return (
    <div className="bg-[#000000]">
      <MainComponent LeftComponent={LeftConstantDS} RightComponent={RightConstantDS} />
    </div>
  );
};

export default DSHomePage;

### File: App.css


.fixed-screen {
  position: fixed;
  width: 50%;

}

.nav-text{
color: '#04c1e2';
}

@media screen and (max-width: 768px) {
  .fixed-screen {
    position: relative;
    width:100%
  }
}


.custom-bullets li::before {
content: '•';
color: white; 
display: inline-block;
width: 1em; 
margin-left: -1em; 
}


.font-medium.text-slate-200 {
  font-weight: 500;
  color: #d1d5db; /* Adjust color code based on your theme */
}

.font-bold.text-teal-300 {
  font-weight: 700;
  color: #2dd4bf; /* Adjust color code based on your theme */
}



### File: index.js

import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import './index.css';
import DSHomePage from './DSHomePage';
import SDEHomePage from './SDEHomePage';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <Router>
      <Routes>
        <Route path="/portfolio/ds" element={<DSHomePage />} />
        <Route path="/" element={<SDEHomePage />} />
      </Routes>
    </Router>
  </React.StrictMode>
);

### File: index.css

@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

### File: SDEHomePage.js

import React, { useEffect } from 'react';
import MainComponent from './components/MainComponent';
import LeftConstantSDE from './components/SDEConstant/LeftConstantSDE';
import RightConstantSDE from './components/SDEConstant/RightConstantSDE';
import './App.css';

const SDEHomePage = () => {
  return (
    <div className="bg-[#000000]">
      <MainComponent LeftComponent={LeftConstantSDE} RightComponent={RightConstantSDE} />
    </div>
  );
};

export default SDEHomePage;

### File: App.js

import "./App.css";
import MainComponent from "./components/MainComponent";
import React, { useEffect, useState } from 'react';


function App() {

  return (
    <div className="bg-[#000000] ">
      <MainComponent/>
    </div>
  );
}


export default App;

### File: components/MainComponent.jsx

import React, { useEffect, useState } from "react";
// import LeftConstantDS from "./LeftConstantDS";
// import RightConstantDS from "./RightConstantDS";

const MainComponent = ({LeftComponent, RightComponent}) => {
  return (
    <div>
      <div>
        <div className="mx-auto min-h-screen max-w-screen-xl md:px-[50px] font-sans text-white h-full">
          <div className="grid grid-cols-1 md:grid-cols-5">
            <div className="p-[50px] md:px-[50px] md:py-[100px] col-span-1 md:col-start-1 md:col-span-2 fixed-screen">
              <LeftComponent />
            </div>
            <div className="col-span-1 md:col-start-3 md:col-span-3">
              <RightComponent />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MainComponent;


### File: components/utilsDS/SectionScroll.jsx

import React, { useState, useEffect } from "react";
import { motion, useAnimation } from "framer-motion";
import { Link } from "react-scroll";

const SectionScroll = () => {
  const [showHoverEffectAbout, setShowHoverEffectAbout] = useState(false);
  const [showHoverEffectEducation, setShowHoverEffectEducation] =
    useState(false);
  const [showHoverEffectExperience, setShowHoverEffectExperience] =
    useState(false);
  const [showHoverEffectProjects, setShowHoverEffectProjects] = useState(false);

  useEffect(() => {
    const targetSectionAbout = document.querySelector("#about-title"); // Replace with your section's ID
    const targetSectionEducation = document.querySelector("#education-title");
    const targetSectionExperience = document.querySelector("#experience-title");
    const targetSectionProjects = document.querySelector("#project-title");

    const handleScroll = () => {
      if (targetSectionAbout) {
        setTimeout(() => {
          const isInView = isInViewport(targetSectionAbout);
          console.log("Education Is in view:", isInView);
          setShowHoverEffectAbout(isInView);
        }, 100); // Adjust the delay as needed
      }
      if (targetSectionEducation) {
        setTimeout(() => {
          const isInView =
            isInViewport(targetSectionEducation) &&
            !isInViewport(targetSectionAbout);
          console.log("Education Is in view:", isInView);
          setShowHoverEffectEducation(isInView);
        }, 100); // Adjust the delay as needed
      }
      if (targetSectionExperience) {
        setTimeout(() => {
          const isInView =
            isInViewport(targetSectionExperience) &&
            !isInViewport(targetSectionEducation);
          console.log("Experience Is in view:", isInView);
          setShowHoverEffectExperience(isInView);
        }, 100); // Adjust the delay as needed
      }
      if (targetSectionProjects) {
        setTimeout(() => {
          const isInView =
            isInViewport(targetSectionProjects) &&
            !isInViewport(targetSectionExperience);
          console.log("Projects Is in view:", isInView);
          setShowHoverEffectProjects(isInView);
        }, 100); // Adjust the delay as needed
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const isInViewport = (element) => {
    const rect = element.getBoundingClientRect();
    return rect.top >= 0 && rect.bottom <= window.innerHeight;
  };

  return (
    <div>
      <li>
        <Link to="about" spy={true} smooth={true} offset={0} duration={500}>
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectAbout ? "bg-[#04c1e2] w-16" : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectAbout ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              About
            </span>
          </div>
        </Link>
      </li>
      <li>
        <Link to="education" spy={true} smooth={true} offset={0} duration={500}>
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectEducation
                  ? "bg-[#04c1e2] w-16"
                  : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectEducation ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              Education
            </span>
          </div>
        </Link>
      </li>
      <li>
        <Link
          to="experience"
          spy={true}
          smooth={true}
          offset={0}
          duration={500}
        >
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectExperience
                  ? "bg-[#04c1e2] w-16"
                  : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectExperience ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              Experience
            </span>
          </div>
        </Link>
      </li>
      <li>
        <Link to="projects" spy={true} smooth={true} offset={0} duration={500}>
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectProjects
                  ? "bg-[#04c1e2] w-16"
                  : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectProjects ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              Projects
            </span>
          </div>
        </Link>
      </li>
    </div>
  );
};

export default SectionScroll;


### File: components/utilsDS/ProjectCard.jsx

import React from 'react';
import PropTypes from 'prop-types';

const ProjectCard = props => {
  const { project_title, project_description, project_url, tech_used, project_image, youtube_video_url } = props;

  return (
    <div className='pb-[50px]'>
      <div className="group relative grid gap-4 pb-1 transition-all sm:grid-cols-8 sm:gap-8 md:gap-4">
        <div className="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md"></div>
        <div className="z-10 sm:order-2 sm:col-span-6">
          <h3>
            <a href={project_url} target="_blank" rel="noopener noreferrer" className="inline-flex items-baseline font-medium leading-tight text-slate-200 hover:text-teal-300 focus-visible:text-teal-300 group/link text-base">
              <span className="absolute -inset-x-4 -inset-y-2.5 hidden rounded md:-inset-x-6 md:-inset-y-4 lg:block"></span>
              <span>
                <span className="inline-block">
                  {project_title}
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="inline-block h-4 w-4 shrink-0 transition-transform group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none ml-1 translate-y-px" aria-hidden="true">
                    <path fillRule="evenodd" d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z" clipRule="evenodd"></path>
                  </svg>
                </span>
              </span>
            </a>
          </h3>
          <ul className="list-disc pl-5 mt-2 text-sm leading-normal text-gray-500 dark:text-gray-400">
            {project_description.map((desc, index) => (
              <li key={index}>{desc}</li>
            ))}
          </ul>
          <ul className="mt-2 flex flex-wrap" aria-label="Technologies used:">
            {tech_used.map((tech, index) => (
              <li key={index} className="mr-1.5 mt-2">
                <div className="flex items-center rounded-full bg-teal-400/10 px-3 py-1 text-xs font-medium leading-5 text-teal-300">{tech}</div>
              </li>
            ))}
          </ul>
          
        </div>
        <img alt={project_title + " image"} loading="lazy" width="200" height="48" decoding="async" data-nimg="1" className="transition group-hover:border-slate-200/30 sm:order-1 sm:col-span-2 sm:translate-y-1" style={{ color: "transparent" }} src={project_image}></img>
      </div>
      <div className="mt-4">
            <h4 className="font-medium text-slate-200">Demo</h4>
            <a href={youtube_video_url} target="_blank" rel="noopener noreferrer" className="text-teal-300 hover:underline">
              Watch on YouTube
            </a>
          </div>
    </div>
  );
};

ProjectCard.propTypes = {
  project_title: PropTypes.string.isRequired,
  project_description: PropTypes.arrayOf(PropTypes.string).isRequired,
  project_url: PropTypes.string.isRequired,
  tech_used: PropTypes.arrayOf(PropTypes.string).isRequired,
  project_image: PropTypes.string.isRequired,
  youtube_video_url: PropTypes.string.isRequired
};

export default ProjectCard;

### File: components/utilsDS/ExperienceCard.jsx

import React from "react";
import PropTypes from "prop-types";

const ExperienceCard = (props) => {
  const { timeline, role, name, description, skills,link } = props;
  return (
    <div className="py-[20px]">
      <div class="mb-12">
        <div class="group relative grid pb-1 transition-all sm:grid-cols-8 sm:gap-8 md:gap-4 lg:hover:!opacity-100 lg:group-hover/list:opacity-50">
          <div class="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md transition motion-reduce:transition-none lg:-inset-x-6 lg:block lg:group-hover:bg-[#ffffff1a] lg:group-hover:shadow-[inset_0_1px_0_0_rgba(148,163,184,0.1)] lg:group-hover:drop-shadow-lg"></div>
          <header
            class="z-10 mb-2 mt-1 text-xs font-semibold uppercase tracking-wide text-slate-500 sm:col-span-2"
            aria-label="2018 to Present"
          >
            {timeline}
          </header>
          <div class="z-10 sm:col-span-6">
            <h3 class="font-medium leading-snug text-slate-200">
              <div>
                <a
                  class="inline-flex items-baseline font-medium leading-tight text-slate-200 hover:text-teal-300 focus-visible:text-teal-300  group/link text-base"
                  href={link}
                  target="_blank"
                  rel="noreferrer"
                  aria-label="Software Engineer at JP Morgan & Chase"
                >
                  <span class="absolute -inset-x-4 -inset-y-2.5 hidden rounded md:-inset-x-6 md:-inset-y-4 lg:block"></span>
                  <span>
                    <span class="inline-block">
                      {name}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        class="inline-block h-4 w-4 shrink-0 transition-transform group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none ml-1 translate-y-px"
                        aria-hidden="true"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z"
                          clip-rule="evenodd"
                        ></path>
                      </svg>
                    </span>
                  </span>
                </a>
              </div>
              <div>
                <div class="text-slate-500" aria-hidden="true">
                  {role}
                </div>
              </div>
            </h3>

            <ul className="pl-5 mt-2 text-sm leading-normal text-gray-500 dark:text-gray-400 custom-bullets">
              {description.map((item, index) => (
                <li key={index}>{item}</li>
              ))}
            </ul>

            <ul class="mt-2 flex flex-wrap" aria-label="Technologies used">
              {skills.map((skill, index) => {
                return (
                  <li class="mr-1.5 mt-2">
                    <div class="flex items-center rounded-full bg-teal-400/10 px-3 py-1 text-xs font-medium leading-5 text-teal-300 ">
                      {skill}
                    </div>
                  </li>
                );
              })}
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

ExperienceCard.propTypes = {};

export default ExperienceCard;


### File: components/fieldsDS/About.jsx

import React from "react";

const About = () => {
  return (
    <div
      id="about"
      className="p-[50px] md:pl-[100px] md:pr-[50px] md:py-[100px]"
    >
      <h2 id="about-title" className="font-bold uppercase pb-[20px] text-[#04c1e2]">
        About
      </h2>
      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400 text-justify">
      Hey there! I'm Arohan, a machine learning enthusiast currently pursuing my Master's in Computer Science at NC State. My journey in the world of AI and data science began
       during my undergrad days at Kalinga Institute of Industrial Technology, where I laid a strong foundation in IT.
      </p>

      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400 text-justify">
        At <span className="font-bold text-slate-200">NC State</span>, I'm diving deep into the realms of algorithms, software engineering, <span className="font-bold text-slate-200">cloud computing</span>, and <span className="font-bold text-slate-200">neural networks</span>. 
        Armed with a versatile tech stack that includes <span className="font-bold text-teal-300">Python, R, C++, MATLAB, </span> and frameworks like 
         <span className="font-bold text-teal-300"> Django, Flask, and PyTorch</span>, I've been working on projects that push 
        the boundaries of what's possible with machine learning. From hate speech detection and CGM neural network optimization to developing Python packages and 
        conducting urban data analysis, I thrive on tackling diverse challenges and delivering impactful solutions.
      </p>

      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400 text-justify">
        When I’m not at the computer, I’m usually trekking, spending time with
        my friends, playing Lawn Tennis or Working Out.
      </p>
    </div>
  );
};

export default About;


### File: components/fieldsDS/Education.jsx

import React from "react";

const Experience = () => {
  return (
    <div id="education" className="p-[50px] md:px-[100px] md:pt-[100px]">
      <h2
        id="education-title"
        className="font-bold uppercase pb-[40px] text-[#04c1e2]"
      >
        EDUCATION
      </h2>
      <div className="pl-[20px] md:pl-[50px]">
        <ol className="pl-[30px] relative border-l border-gray-200 dark:border-gray-700">
          <li className="mb-10 ml-6">
            <span
              className="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -left-3 ring-8 ring-black dark:ring-gray-900"
              style={{ backgroundColor: "#000000" }}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="#04c1e2"
                className="w-6 h-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5"
                />
              </svg>
            </span>
            <h3 className="flex items-center mb-1 text-lg font-semibold text-gray-900 text-white">
              North Carolina State University
            </h3>
            <time className="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
              August 2023 - December 2024
            </time>
            <p className="text-base italic font-normal text-gray-500 dark:text-gray-400">
              Master of Science in Computer Science | GPA: 3.7/4.0
            </p>
          </li>
          <li className="mb-10 ml-6">
            <span
              className="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -left-3 ring-8 ring-black dark:ring-gray-900"
              style={{ backgroundColor: "#000000" }}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="#04c1e2"
                className="w-6 h-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.702 0 0112 13.489a50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5"
                />
              </svg>
            </span>
            <h3 className="mb-1 text-lg font-semibold text-gray-900 text-white">
              Kalinga Institute of Industrial Technology
            </h3>
            <time className="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
              August 2017 - August 2021
            </time>
            <p className="text-base italic font-normal text-gray-500 dark:text-gray-400">
              Bachelor of Technology, Computer Science | GPA: 3.5/4.0
            </p>
          </li>
        </ol>
      </div>

      <div class="mt-12" className="pt-[50px]">
        <a
          class="inline-flex items-center font-medium leading-tight text-slate-200 font-semibold text-slate-200 group"
          aria-label="View Résumé"
          href="https://drive.google.com/file/d/14udIh_fvFx6hiLlm31tItRRM30Z3rJWn/view?usp=sharing"
          target="_blank"
        >
          <span>
            <span class="border-b border-transparent pb-px transition group-hover:border-teal-300 motion-reduce:transition-none"></span>
            <span class="whitespace-nowrap">
              <span class="border-b border-transparent pb-px transition group-hover:border-teal-300 motion-reduce:transition-none">
                View Résumé
              </span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
                class="ml-1 inline-block h-4 w-4 shrink-0 -translate-y-px transition-transform group-hover:translate-x-2 group-focus-visible:translate-x-2 motion-reduce:transition-none"
                aria-hidden="true"
              >
                <path
                  fill-rule="evenodd"
                  d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z"
                  clip-rule="evenodd"
                ></path>
              </svg>
            </span>
          </span>
        </a>
      </div>
    </div>
  );
};

export default Experience;


### File: components/fieldsDS/Experience.jsx

import React from "react";
import ExperienceCard from "../utils/ExperienceCard";

const Experience = () => {
  return (
    <div
      id="experience"
      className="p-[50px] md:pt-[100px] md:pl-[100px] md:pr-[50px]"
    >
      <h2
        id="experience-title"
        class="font-bold uppercase pb-[20px] text-[#04c1e2]"
      >
        Experience
      </h2>

      <ExperienceCard
        timeline="May 2020 - May 2022"
        role="Machine Learning Engineer"
        name="Omdena"
        description={[
          <>
            Developed Python script to scrape a substantial dataset of social media content in (non-English language) Tamil, enabling large-scale analysis of hate speech.
          </>,
          <>
            Trained and deployed a cutting-edge language transformer model to accurately classify hate speech text in Tamil, achieving{" "}
            <span className="font-medium text-slate-200">
              95% accuracy
            </span>{" "}
            ton benchmark dataset.
          </>,
          <>
            Designed and Implemented an {" "}
            <span className="font-medium text-slate-200">API deployment pipeline</span>{" "}, streamlining access to the hate speech detection model for real-world
applications.
          </>,
          <>
            Optimized of CGM neural networks’ prediction accuracy, achieving a{" "}
            <span className="font-medium text-slate-200">90% success rate</span>{" "}
            (less than .2cm, .4cm, .6cm, 1cm, and rejected) for comprehensive result analysis.
          </>,
        ]}
        skills={[
          "Natural Language Processing",
          "Computer Vision",
          "MLOps",
          "AWS",
        ]}
      />

      <ExperienceCard
        timeline="October 2020 - December 2020"
        role="Data Science Intern"  
        name="Aiotize"
        description={[
          <>
            Used{" "}
            <span className="font-medium text-slate-200">YOLO</span> object detection and classification using {" "}
            <span className="font-medium text-slate-200">CNN and Pose Estimation</span> to achieve <span className="font-medium text-slate-200">90% accuracy</span> on video based camera feed.
          </>,
        ]}
        skills={[
          "Python",
          "Optimization",
          "Object Detection",
          "Pose Estimation",
          "PyTorch",
        ]}
      />

      <ExperienceCard
        timeline="February 2019 - January 2022"
        role="Python Developer"
        name="Internet of Things Research Lab, KIIT University"
        description={[
          <>
            Developed and maintained a dashboard for real-time sensor data mapping {" "}<span className="font-medium text-slate-200">
              10,000+ rows of data 24/7
            </span>dashboard using {" "}
            <span className="font-medium text-slate-200">
              Python and Django
            </span>
            
          </>,
          <>
            Utilized <span className="font-medium text-slate-200"> Intel OpenVINO </span> toolkit to run deep learning models on GPU for high density sensor data
            .
          </>,
        ]}
        skills={["Python", "OpenVINO", "Django", "Matplotlib"]}
      />
    </div>
  );
};

export default Experience;


### File: components/fieldsDS/Projects.jsx

import React from "react";
import ProjectCard from "../utilsDS/ProjectCard";
import Face from "../../images/face.webp";
import FWMS from "../../images/FWMS.jpeg";
import MovieR from "../../images/MovieR.jpeg";
import Urban from "../../images/urban.webp";

const Projects = () => {
  return (
    <div id="projects" className="p-[50px] md:pt-[100px] md:pl-[100px]">
      <h2
        id="project-title"
        className="font-bold uppercase pb-[40px] text-[#04c1e2]"
      >
        Projects
      </h2>
      <ProjectCard
        project_title="Recurrent Neural Network - LSTM - Script Generation"
        project_description={[
          "Developed a Recurrent Neural Network (RNN/LSTM) based model to generate TV scripts in the style of the sitcom Seinfeld,",
          "achieving a novel application of text generation and natural language processing. Utilized PyTorch for model development,",
          "training the network on a dataset of TV scripts over 10 epochs, and successfully reduced the loss from 4.74 to approximately",
          "3.00, demonstrating the model's learning efficiency and capability to generate coherent text."
        ]}
        project_url="https://github.com/arohanajit/tv-script-generation"
        tech_used={[
          "Python",
          "PyTorch",
          "Recurrent Neural Networks",
          "Long Short-Term Memory (LSTM)"
        ]}
        project_image={MovieR}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-1"
      />
      <ProjectCard
        project_title="Generative Adversarial Network - Face Generation"
        project_description={[
          "Developed a sophisticated Generative Adversarial Network (GAN) capable of generating realistic human faces, leveraging TensorFlow/Keras",
          "and advanced CNN techniques. Achieved significant milestones in model accuracy and efficiency through iterative training and optimization,",
          "demonstrating capabilities in neural network design and machine learning algorithms."
        ]}
        project_url="https://github.com/arohanajit/face-generation-gan"
        tech_used={["Python", "Convolutional Neural Networks", "Generatuve Adversarial Networks", "TensorFlow"]}
        project_image={Face}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-2"
      />
      <ProjectCard
        project_title="Python Package - `imgdata`"
        project_description={[
          "Developed a Python package, a tool for automating the collection and organization of image datasets from popular stock image APIs like",
          "Pexels and Unsplash. The package supports image downloading, and dataset structuring into train, test, and validation sets, significantly",
          "streamlining the data preparation process for machine learning projects."
          ]}
        project_url="https://pypi.org/project/imgdata/"
        tech_used={["Python", "Flask", "Django"]}
        project_image={FWMS}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-3"
      />
      <ProjectCard
        project_title="Urban Neighborhood"
        project_description={[
          "Quantified and visualized urban data from multiple cities, applying advanced data cleaning, preprocessing, and analysis techniques to handle",
          "complex datasets, clustering 194+ neighborhoods by venue data (Foursquare API) and visualized results to present actionable insights into",
          "urban planning and development and achieving a deep understanding of city dynamics through geospatial and statistical analysis"
        ]}
        project_url="https://github.com/arohanajit/City_Analysis/blob/master/Ideal%20Neighborhood%20in%20Bangalore.pdf"
        tech_used={["Data Science", "Data Analysis", "Data Visualization"]}
        project_image={Urban}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-4"
      />
    </div>
  );
};

export default Projects;

### File: components/utils/SectionScroll.jsx

import React, { useState, useEffect } from "react";
import { motion, useAnimation } from "framer-motion";
import { Link } from "react-scroll";

const SectionScroll = () => {
  const [showHoverEffectAbout, setShowHoverEffectAbout] = useState(false);
  const [showHoverEffectEducation, setShowHoverEffectEducation] =
    useState(false);
  const [showHoverEffectExperience, setShowHoverEffectExperience] =
    useState(false);
  const [showHoverEffectProjects, setShowHoverEffectProjects] = useState(false);

  useEffect(() => {
    const targetSectionAbout = document.querySelector("#about-title"); // Replace with your section's ID
    const targetSectionEducation = document.querySelector("#education-title");
    const targetSectionExperience = document.querySelector("#experience-title");
    const targetSectionProjects = document.querySelector("#project-title");

    const handleScroll = () => {
      if (targetSectionAbout) {
        setTimeout(() => {
          const isInView = isInViewport(targetSectionAbout);
          console.log("Education Is in view:", isInView);
          setShowHoverEffectAbout(isInView);
        }, 100); // Adjust the delay as needed
      }
      if (targetSectionEducation) {
        setTimeout(() => {
          const isInView =
            isInViewport(targetSectionEducation) &&
            !isInViewport(targetSectionAbout);
          console.log("Education Is in view:", isInView);
          setShowHoverEffectEducation(isInView);
        }, 100); // Adjust the delay as needed
      }
      if (targetSectionExperience) {
        setTimeout(() => {
          const isInView =
            isInViewport(targetSectionExperience) &&
            !isInViewport(targetSectionEducation);
          console.log("Experience Is in view:", isInView);
          setShowHoverEffectExperience(isInView);
        }, 100); // Adjust the delay as needed
      }
      if (targetSectionProjects) {
        setTimeout(() => {
          const isInView =
            isInViewport(targetSectionProjects) &&
            !isInViewport(targetSectionExperience);
          console.log("Projects Is in view:", isInView);
          setShowHoverEffectProjects(isInView);
        }, 100); // Adjust the delay as needed
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const isInViewport = (element) => {
    const rect = element.getBoundingClientRect();
    return rect.top >= 0 && rect.bottom <= window.innerHeight;
  };

  return (
    <div>
      <li>
        <Link to="about" spy={true} smooth={true} offset={0} duration={500}>
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectAbout ? "bg-[#04c1e2] w-16" : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectAbout ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              About
            </span>
          </div>
        </Link>
      </li>
      <li>
        <Link to="education" spy={true} smooth={true} offset={0} duration={500}>
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectEducation
                  ? "bg-[#04c1e2] w-16"
                  : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectEducation ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              Education
            </span>
          </div>
        </Link>
      </li>
      <li>
        <Link
          to="experience"
          spy={true}
          smooth={true}
          offset={0}
          duration={500}
        >
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectExperience
                  ? "bg-[#04c1e2] w-16"
                  : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectExperience ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              Experience
            </span>
          </div>
        </Link>
      </li>
      <li>
        <Link to="projects" spy={true} smooth={true} offset={0} duration={500}>
          <div class="group flex items-center py-2 active">
            <span
              class={`nav-indicator mr-4 h-px transition-all group-hover:w-16 group-hover:bg-[#04c1e2] group-focus-visible:w-16 group-focus-visible:bg-[#04c1e2] ${
                showHoverEffectProjects
                  ? "bg-[#04c1e2] w-16"
                  : "w-8 bg-slate-400"
              }`}
            ></span>
            <span
              class={`nav-text text-xs font-bold uppercase tracking-widest group-hover:text-[#04c1e2] group-focus-visible:text-[#04c1e2] ${
                showHoverEffectProjects ? "text-[#04c1e2]" : "text-slate-400"
              }`}
            >
              Projects
            </span>
          </div>
        </Link>
      </li>
    </div>
  );
};

export default SectionScroll;


### File: components/utils/ProjectCard.jsx

import React from 'react'
import PropTypes from 'prop-types'

const ProjectCard = props => {
    const { project_title, project_description, project_url, tech_used, project_image } = props;

    return (
        <div className='pb-[50px]'>
            <div className="group relative grid gap-4 pb-1 transition-all sm:grid-cols-8 sm:gap-8 md:gap-4 lg:hover:!opacity-100 lg:group-hover/list:opacity-50">
                <div className="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md transition motion-reduce:transition-none lg:-inset-x-6 lg:block lg:group-hover:bg-[#ffffff1a] lg:group-hover:shadow-[inset_0_1px_0_0_rgba(148,163,184,0.1)] lg:group-hover:drop-shadow-lg"></div>
                <div className="z-10 sm:order-2 sm:col-span-6">
                    <h3>
                        <a className="inline-flex items-baseline font-medium leading-tight text-slate-200 hover:text-teal-300 focus-visible:text-teal-300 group/link text-base" href={project_url} target="_blank" rel="noreferrer" aria-label={project_title}>
                            <span className="absolute -inset-x-4 -inset-y-2.5 hidden rounded md:-inset-x-6 md:-inset-y-4 lg:block"></span>
                            <span>
                                <span className="inline-block">
                                    {project_title}
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="inline-block h-4 w-4 shrink-0 transition-transform group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none ml-1 translate-y-px" aria-hidden="true">
                                        <path fillRule="evenodd" d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z" clipRule="evenodd"></path>
                                    </svg>
                                </span>
                            </span>
                        </a>
                    </h3>
                    <ul className="list-disc pl-5 mt-2 text-sm leading-normal text-gray-500 dark:text-gray-400">
                        {project_description.map((desc, index) => (
                            <li key={index}>{desc}</li>
                        ))}
                    </ul>
                    <ul className="mt-2 flex flex-wrap" aria-label="Technologies used:">
                        {tech_used.map((tech, index) => (
                            <li key={index} className="mr-1.5 mt-2">
                                <div className="flex items-center rounded-full bg-teal-400/10 px-3 py-1 text-xs font-medium leading-5 text-teal-300">{tech}</div>
                            </li>
                        ))}
                    </ul>
                </div>
                <img alt={project_title + " image"} loading="lazy" width="200" height="48" decoding="async" data-nimg="1" className="transition group-hover:border-slate-200/30 sm:order-1 sm:col-span-2 sm:translate-y-1" style={{ color: "transparent" }} src={project_image}></img>
            </div>
        </div>
    )
}

ProjectCard.propTypes = {
    project_title: PropTypes.string.isRequired,
    project_description: PropTypes.arrayOf(PropTypes.string).isRequired,
    project_url: PropTypes.string.isRequired,
    tech_used: PropTypes.arrayOf(PropTypes.string).isRequired,
    project_image: PropTypes.string.isRequired
}

export default ProjectCard;


### File: components/utils/ExperienceCard.jsx

import React from "react";
import PropTypes from "prop-types";

const ExperienceCard = (props) => {
  const { timeline, role, name, description, skills,link } = props;
  return (
    <div className="py-[20px]">
      <div class="mb-12">
        <div class="group relative grid pb-1 transition-all sm:grid-cols-8 sm:gap-8 md:gap-4 lg:hover:!opacity-100 lg:group-hover/list:opacity-50">
          <div class="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md transition motion-reduce:transition-none lg:-inset-x-6 lg:block lg:group-hover:bg-[#ffffff1a] lg:group-hover:shadow-[inset_0_1px_0_0_rgba(148,163,184,0.1)] lg:group-hover:drop-shadow-lg"></div>
          <header
            class="z-10 mb-2 mt-1 text-xs font-semibold uppercase tracking-wide text-slate-500 sm:col-span-2"
            aria-label="2018 to Present"
          >
            {timeline}
          </header>
          <div class="z-10 sm:col-span-6">
            <h3 class="font-medium leading-snug text-slate-200">
              <div>
                <a
                  class="inline-flex items-baseline font-medium leading-tight text-slate-200 hover:text-teal-300 focus-visible:text-teal-300  group/link text-base"
                  href={link}
                  target="_blank"
                  rel="noreferrer"
                  aria-label="Software Engineer at JP Morgan & Chase"
                >
                  <span class="absolute -inset-x-4 -inset-y-2.5 hidden rounded md:-inset-x-6 md:-inset-y-4 lg:block"></span>
                  <span>
                    <span class="inline-block">
                      {name}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        class="inline-block h-4 w-4 shrink-0 transition-transform group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none ml-1 translate-y-px"
                        aria-hidden="true"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z"
                          clip-rule="evenodd"
                        ></path>
                      </svg>
                    </span>
                  </span>
                </a>
              </div>
              <div>
                <div class="text-slate-500" aria-hidden="true">
                  {role}
                </div>
              </div>
            </h3>

            <ul className="pl-5 mt-2 text-sm leading-normal text-gray-500 dark:text-gray-400 custom-bullets">
              {description.map((item, index) => (
                <li key={index}>{item}</li>
              ))}
            </ul>

            <ul class="mt-2 flex flex-wrap" aria-label="Technologies used">
              {skills.map((skill, index) => {
                return (
                  <li class="mr-1.5 mt-2">
                    <div class="flex items-center rounded-full bg-teal-400/10 px-3 py-1 text-xs font-medium leading-5 text-teal-300 ">
                      {skill}
                    </div>
                  </li>
                );
              })}
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

ExperienceCard.propTypes = {};

export default ExperienceCard;


### File: components/SDEConstant/RightConstantSDE.jsx

import React from "react";
import Experience from "../fieldsSDE/Experience";
import About from "../fieldsSDE/About";
import Projects from "../fieldsSDE/Projects";
import Education from "../fieldsSDE/Education";

const RightConstantSDE = () => {
  return (
    <div>
      <About />
      <Education />
      <Experience />
      <Projects />
    </div>
  );
};

export default RightConstantSDE;


### File: components/SDEConstant/LeftConstantSDE.jsx

import React from "react";
import SectionScroll from "../utils/SectionScroll";

const LeftConstantSDE = () => {
  return (
    // <header class="lg:sticky lg:top-0 lg:flex lg:max-h-screen lg:w-1/2 lg:flex-col lg:justify-between lg:py-24">

    <div>
      <h1 class="text-4xl font-bold tracking-tight text-slate-200 sm:text-5xl">
        <a href="/">Arohan Ajit</a>
      </h1>
      <h2 class="mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl">
        {" "}
        CS Grad Student at{" "}
        <span style={{ color: "#04c1e2", fontWeight: "bold" }}>NCSU</span>{" "}
      </h2>{" "}
      {/* <h2 class="mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl">CS Grad at NCSU</h2> */}
      <p class="mt-4 max-w-xs leading-normal text-gray-500 dark:text-gray-400">
        Aspiring SDE
      </p>
      {/* <h2 class="mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl">CS Grad at <span style="color:#771d1d;">NCSU</span></h2> */}
      <ul className="pt-[20px]">
        <SectionScroll />
      </ul>
      <ul class="ml-1 mt-8 flex items-center" aria-label="Social media">
        <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="https://github.com/arohanajit"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">GitHub</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 16 16"
              fill="#04c1e2"
              class="h-6 w-6"
              aria-hidden="true"
            >
              <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
            </svg>
          </a>
        </li>
        {/* <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="https://www.instagram.com/bhavyaahir17/"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">Instagram</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 1000 1000"
              fill="#04c1e2"
              class="h-6 w-6"
              aria-hidden="true"
            >
              <path d="M295.42,6c-53.2,2.51-89.53,11-121.29,23.48-32.87,12.81-60.73,30-88.45,57.82S40.89,143,28.17,175.92c-12.31,31.83-20.65,68.19-23,121.42S2.3,367.68,2.56,503.46,3.42,656.26,6,709.6c2.54,53.19,11,89.51,23.48,121.28,12.83,32.87,30,60.72,57.83,88.45S143,964.09,176,976.83c31.8,12.29,68.17,20.67,121.39,23s70.35,2.87,206.09,2.61,152.83-.86,206.16-3.39S799.1,988,830.88,975.58c32.87-12.86,60.74-30,88.45-57.84S964.1,862,976.81,829.06c12.32-31.8,20.69-68.17,23-121.35,2.33-53.37,2.88-70.41,2.62-206.17s-.87-152.78-3.4-206.1-11-89.53-23.47-121.32c-12.85-32.87-30-60.7-57.82-88.45S862,40.87,829.07,28.19c-31.82-12.31-68.17-20.7-121.39-23S637.33,2.3,501.54,2.56,348.75,3.4,295.42,6m5.84,903.88c-48.75-2.12-75.22-10.22-92.86-17-23.36-9-40-19.88-57.58-37.29s-28.38-34.11-37.5-57.42c-6.85-17.64-15.1-44.08-17.38-92.83-2.48-52.69-3-68.51-3.29-202s.22-149.29,2.53-202c2.08-48.71,10.23-75.21,17-92.84,9-23.39,19.84-40,37.29-57.57s34.1-28.39,57.43-37.51c17.62-6.88,44.06-15.06,92.79-17.38,52.73-2.5,68.53-3,202-3.29s149.31.21,202.06,2.53c48.71,2.12,75.22,10.19,92.83,17,23.37,9,40,19.81,57.57,37.29s28.4,34.07,37.52,57.45c6.89,17.57,15.07,44,17.37,92.76,2.51,52.73,3.08,68.54,3.32,202s-.23,149.31-2.54,202c-2.13,48.75-10.21,75.23-17,92.89-9,23.35-19.85,40-37.31,57.56s-34.09,28.38-57.43,37.5c-17.6,6.87-44.07,15.07-92.76,17.39-52.73,2.48-68.53,3-202.05,3.29s-149.27-.25-202-2.53m407.6-674.61a60,60,0,1,0,59.88-60.1,60,60,0,0,0-59.88,60.1M245.77,503c.28,141.8,115.44,256.49,257.21,256.22S759.52,643.8,759.25,502,643.79,245.48,502,245.76,245.5,361.22,245.77,503m90.06-.18a166.67,166.67,0,1,1,167,166.34,166.65,166.65,0,0,1-167-166.34"></path>
            </svg>
          </a>
        </li> */}
        {/* <li class="mr-5 text-xs">
          <a class="block hover:text-slate-200" href="https://twitter.com/bchiang7" target="_blank" rel="noreferrer">
            <span class="sr-only">Twitter</span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 248 204" fill="#04c1e2" class="h-6 w-6" aria-hidden="true">
              <path id="white_background" d="M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04   C50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66   c-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64   c7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76   c-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26   c-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z"></path>
              </svg>
            </a>
        </li> */}

        <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="https://www.linkedin.com/in/arohanajit/"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">LinkedIn</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="#04c1e2"
              class="h-6 w-6"
              aria-hidden="true"
            >
              <path d="M20.5 2h-17A1.5 1.5 0 002 3.5v17A1.5 1.5 0 003.5 22h17a1.5 1.5 0 001.5-1.5v-17A1.5 1.5 0 0020.5 2zM8 19H5v-9h3zM6.5 8.25A1.75 1.75 0 118.3 6.5a1.78 1.78 0 01-1.8 1.75zM19 19h-3v-4.74c0-1.42-.6-1.93-1.38-1.93A1.74 1.74 0 0013 14.19a.66.66 0 000 .14V19h-3v-9h2.9v1.3a3.11 3.11 0 012.7-1.4c1.55 0 3.36.86 3.36 3.66z"></path>
            </svg>
          </a>
        </li>
        <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="mailto:arohanajit232@gmail.com"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">LinkedIn</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="#04c1e2"
              class="w-6 h-6"
            >
              <path d="M1.5 8.67v8.58a3 3 0 003 3h15a3 3 0 003-3V8.67l-8.928 5.493a3 3 0 01-3.144 0L1.5 8.67z" />
              <path d="M22.5 6.908V6.75a3 3 0 00-3-3h-15a3 3 0 00-3 3v.158l9.714 5.978a1.5 1.5 0 001.572 0L22.5 6.908z" />
            </svg>
          </a>
        </li>
      </ul>
    </div>
    // </header>
  );
};

export default LeftConstantSDE;


### File: components/DSConstant/RightConstantDS.jsx

// src/components/RightDS.jsx
import React from "react";
import Experience from "../fieldsDS/Experience";
import About from "../fieldsDS/About";
import Projects from "../fieldsDS/Projects";
import Education from "../fieldsDS/Education";

const RightConstantDS = () => {
  return (
    <div>
      <About />
      <Education />
      <Experience />
      <Projects />
    </div>
  );
};

export default RightConstantDS;

### File: components/DSConstant/LeftConstantDS.jsx

// src/components/LeftDS.jsx
import React from "react";
import SectionScroll from "../utilsDS/SectionScroll";

const LeftConstantDS = () => {
  return (
    <div>
      <h1 class="text-4xl font-bold tracking-tight text-slate-200 sm:text-5xl">
        <a href="/">Arohan Ajit</a>
      </h1>
      <h2 class="mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl">
        {" "}
        CS Grad Student at{" "}
        <span style={{ color: "#04c1e2", fontWeight: "bold" }}>NCSU</span>{" "}
      </h2>{" "}
      <p class="mt-4 max-w-xs leading-normal text-gray-500 dark:text-gray-400">
        Aspiring ML Enthusiast.
      </p>
      <ul className="pt-[20px]">
        <SectionScroll />
      </ul>
      <ul class="ml-1 mt-8 flex items-center" aria-label="Social media">
        <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="https://github.com/arohanajit"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">GitHub</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 16 16"
              fill="#04c1e2"
              class="h-6 w-6"
              aria-hidden="true"
            >
              <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
            </svg>
          </a>
        </li>
        <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="https://www.linkedin.com/in/arohanajit/"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">LinkedIn</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="#04c1e2"
              class="h-6 w-6"
              aria-hidden="true"
            >
              <path d="M20.5 2h-17A1.5 1.5 0 002 3.5v17A1.5 1.5 0 003.5 22h17a1.5 1.5 0 001.5-1.5v-17A1.5 1.5 0 0020.5 2zM8 19H5v-9h3zM6.5 8.25A1.75 1.75 0 118.3 6.5a1.78 1.78 0 01-1.8 1.75zM19 19h-3v-4.74c0-1.42-.6-1.93-1.38-1.93A1.74 1.74 0 0013 14.19a.66.66 0 000 .14V19h-3v-9h2.9v1.3a3.11 3.11 0 012.7-1.4c1.55 0 3.36.86 3.36 3.66z"></path>
            </svg>
          </a>
        </li>
        <li class="mr-5 text-xs">
          <a
            class="block hover:text-slate-200"
            href="mailto:arohanajit232@gmail.com"
            target="_blank"
            rel="noreferrer"
          >
            <span class="sr-only">LinkedIn</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="#04c1e2"
              class="w-6 h-6"
            >
              <path d="M1.5 8.67v8.58a3 3 0 003 3h15a3 3 0 003-3V8.67l-8.928 5.493a3 3 0 01-3.144 0L1.5 8.67z" />
              <path d="M22.5 6.908V6.75a3 3 0 00-3-3h-15a3 3 0 00-3 3v.158l9.714 5.978a1.5 1.5 0 001.572 0L22.5 6.908z" />
            </svg>
          </a>
        </li>
      </ul>
    </div>
  );
};

export default LeftConstantDS;

### File: components/fieldsSDE/About.jsx

import React from "react";

const About = () => {
  return (
    <div id="about" className="p-[50px] md:pl-[100px] md:pr-[50px] md:py-[100px]">
      <h2 id="about-title" className="font-bold uppercase pb-[20px] text-[#04c1e2]">
        About
      </h2>
      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">
        Hey there! I'm Arohan, a software developer with a background in Information Technology from Kalinga Institute of Industrial Technology, I've been honing my skills in web development and cloud computing. My journey has taken me from the halls of academia to the dynamic world of{" "}
        <a className="font-medium text-slate-200 hover:text-teal-300 focus-visible:text-teal-300" href="https://www.accenture.com/" target="_blank" rel="noreferrer">
          Accenture
        </a>{" "}
        where I've had the opportunity to work as a Software Development Associate working with a delightful mix of technologies like <span className="font-bold text-teal-300">React JS, Django</span> to deliver scalable and highly secure applications for one of the biggest financial institutions in the world.
      </p>
      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">
        My current focus is on expanding my understanding of various technology sectors and strengthening my <span className="font-bold text-teal-300">computer science fundamentals</span>. I also dedicate time to contributing to <span className="font-bold text-slate-200">open-source projects</span>, which helps me stay connected with the global tech community and continuously improve my coding skills.
      </p>
      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">
        When it comes to tech stacks, I have experience with the following:
        <ul className="list-disc pl-6 mt-2">
          <li>
            <span className="font-bold text-teal-300">Front End:</span> React JS, HTML, CSS, JavaScript
          </li>
          <li>
            <span className="font-bold text-teal-300">Back End:</span> Django, Node.js, Flask
          </li>
          <li>
            <span className="font-bold text-teal-300">Databases:</span> MySQL, MongoDB, PostgreSQL
          </li>
          <li>
            <span className="font-bold text-teal-300">Certifications:</span> <a href="https://www.credly.com/badges/5e606db7-c101-4e69-afeb-9f7f8cebf55d?source=linked_in_profile"><u>Azure Cloud Fundamentals</u></a>
          </li>
        </ul>
      </p>
      <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">
        When I'm not at the computer, I'm usually trekking, spending time with my friends, or watching <span className="font-bold text-teal-300">Soccer</span>.
      </p>
    </div>
  );
};

export default About;

### File: components/fieldsSDE/Education.jsx

import React from "react";

const Experience = () => {
  return (
    <div id="education" className="p-[50px] md:px-[100px] md:pt-[100px]">
      <h2
        id="education-title"
        className="font-bold uppercase pb-[40px] text-[#04c1e2]"
      >
        EDUCATION
      </h2>
      <div className="pl-[20px] md:pl-[50px]">
        <ol className="pl-[30px] relative border-l border-gray-200 dark:border-gray-700">
          <li className="mb-10 ml-6">
            <span
              className="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -left-3 ring-8 ring-black dark:ring-gray-900"
              style={{ backgroundColor: "#000000" }}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="#04c1e2"
                className="w-6 h-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5"
                />
              </svg>
            </span>
            <h3 className="flex items-center mb-1 text-lg font-semibold text-gray-900 text-white">
              North Carolina State University
            </h3>
            <time className="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
              August 2023 - December 2024
            </time>
            <p className="text-base italic font-normal text-gray-500 dark:text-gray-400">
              Master of Science in Computer Science | GPA: 3.7/4.0
            </p>
          </li>
          <li className="mb-10 ml-6">
            <span
              className="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -left-3 ring-8 ring-black dark:ring-gray-900"
              style={{ backgroundColor: "#000000" }}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="#04c1e2"
                className="w-6 h-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.702 0 0112 13.489a50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5"
                />
              </svg>
            </span>
            <h3 className="mb-1 text-lg font-semibold text-gray-900 text-white">
              Kalinga Institute of Industrial Technology
            </h3>
            <time className="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
              August 2017 - August 2021
            </time>
            <p className="text-base italic font-normal text-gray-500 dark:text-gray-400">
              Bachelor of Technology, Computer Science | GPA: 3.5/4.0
            </p>
          </li>
        </ol>
      </div>

      <div class="mt-12" className="pt-[50px]">
        <a
          class="inline-flex items-center font-medium leading-tight text-slate-200 font-semibold text-slate-200 group"
          aria-label="View Résumé"
          href="https://drive.google.com/file/d/14udIh_fvFx6hiLlm31tItRRM30Z3rJWn/view?usp=sharing"
          target="_blank"
        >
          <span>
            <span class="border-b border-transparent pb-px transition group-hover:border-teal-300 motion-reduce:transition-none"></span>
            <span class="whitespace-nowrap">
              <span class="border-b border-transparent pb-px transition group-hover:border-teal-300 motion-reduce:transition-none">
                View Résumé
              </span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
                class="ml-1 inline-block h-4 w-4 shrink-0 -translate-y-px transition-transform group-hover:translate-x-2 group-focus-visible:translate-x-2 motion-reduce:transition-none"
                aria-hidden="true"
              >
                <path
                  fill-rule="evenodd"
                  d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z"
                  clip-rule="evenodd"
                ></path>
              </svg>
            </span>
          </span>
        </a>
      </div>
    </div>
  );
};

export default Experience;


### File: components/fieldsSDE/Experience.jsx

import React from "react";
import ExperienceCard from "../utils/ExperienceCard";

const Experience = () => {
  return (
    <div
      id="experience"
      className="p-[50px] md:pt-[100px] md:pl-[100px] md:pr-[50px]"
    >
      <h2
        id="experience-title"
        class="font-bold uppercase pb-[20px] text-[#04c1e2]"
      >
        Experience
      </h2>

      <ExperienceCard
        timeline="May 2021 - July 2023"
        role="Software Development Associate"
        name="Accenture"
        description={[
          <>
            Developed and maintained dynamic, responsive web applications using <span className="font-medium text-teal-300">React JS </span> for the front end and Django for the backend, 
            delivering high-quality solutions to clients
          </>,
          <>
            Implemented clean, reusable, and modular code using React components and hooks, resulting in a 
            <span className="font-medium text-slate-200">
            20% increase
            </span>{" "}
            in efficiency.
          </>,
          <>
            Utilized Django's powerful features, such as <span className="font-medium text-teal-300">ORM and REST framework </span>, to build scalable and secure backend systems, handling over {" "}
            <span className="font-medium text-slate-200">10,000 monthly requests</span>.
          </>,
          <>
            Integrated React with Django using <span className="font-medium text-teal-300">RESTful APIs</span>, ensuring seamless communication between the front end and backend.
          </>,
          <>
          Collaborated with a team of 3+ back-end developers and web designers to improve usability, achieving a <span className="font-medium text-slate-200">15% increase</span> in user satisfaction.
          </>
        ]}
        skills={[
          "REact JS",
          "Django",
          "Cloud Deployment",
          "RESTful APIs",
        ]}
      />

      <ExperienceCard
        timeline="September 2018 - June 2021"
        role="Web Developer"  
        name="Entreprenuership Cell, KIIT University"
        description={[
          <>
          Developed and maintained the college entrepreneurship cell website, responsible for handling traffic ranging from <span className="font-medium text-slate-200">500 to 2000 daily hits</span>
          depending on events.
          </>,
          <>
          Built and deployed separate websites for various events hosted by the cell, ensuring a smooth user experience.
          </>,
          <>
          Utilized  <span className="font-medium text-teal-300">MongoDB and Node.js</span> for backend development, showcasing proficiency in building robust and scalable web applications.
          </>,
          <>
          Leveraged <span className="font-medium text-teal-300">AWS infrastructure</span> for website hosting, demonstrating a solid understanding of cloud services and deployment.
          </>,
        ]}
        skills={[
          "JavaScript",
          "AWS",
          "MongoDB",
          "NodeJS",
        ]}
      />

      <ExperienceCard
        timeline="February 2019 - January 2022"
        role="Python Developer"
        name="Internet of Things Research Lab, KIIT University"
        description={[
          <>
            Developed and maintained a dashboard for real-time sensor data mapping {" "}<span className="font-medium text-slate-200">
              10,000+ rows of data 24/7
            </span>dashboard using {" "}
            <span className="font-medium text-slate-200">
              Python and Django
            </span>
            
          </>,
          <>
            Utilized <span className="font-medium text-slate-200"> Intel OpenVINO </span> toolkit to run deep learning models on GPU for high density sensor data
            .
          </>,
        ]}
        skills={["Python", "OpenVINO", "Django", "Matplotlib"]}
      />
    </div>
  );
};

export default Experience;


### File: components/fieldsSDE/Projects.jsx

import React from "react";
import ProjectCard from "../utilsDS/ProjectCard";
import Face from "../../images/face.webp";
import FWMS from "../../images/FWMS.jpeg";
import MovieR from "../../images/MovieR.jpeg";
import Urban from "../../images/urban.webp";

const Projects = () => {
  return (
    <div id="projects" className="p-[50px] md:pt-[100px] md:pl-[100px]">
      <h2
        id="project-title"
        className="font-bold uppercase pb-[40px] text-[#04c1e2]"
      >
        Projects
      </h2>
      <ProjectCard
        project_title="Python - Webapp - Calorie Tracker"
        project_description={[
          "Developed a web app, to streamline calorie and weight tracking by integrating with Google Calendar and offering multiple input methods ",
          "including web and Google Forms. Utilized Python, Flask, Google APIs, and MySQL, handling data across various modules ",
          "o calculate and remind users of their Total Daily Energy Expenditure (TDEE) through automated calendar events."
        ]}
        project_url="https://github.com/arohanajit/tdee-website"
        tech_used={[
          "Python",
          "Google Calendar API",
          "Flask",
          "Jupyter Notebook",
          "SQL"
        ]}
        project_image={MovieR}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-1"
      />
      <ProjectCard
        project_title="MERN - Redux - Ecommerce Website"
        project_description={[
          "Developed a full-featured eCommerce platform using the MERN stack & Redux, showcased in eCommerce Platform, supporting product",
          "management, user profiles, and PayPal integration. Enhanced experience with features like product reviews, search, pagination, and a ",
          "complete checkout process, serving as a comprehensive solution for online retail."
        ]}
        project_url="https://github.com/arohanajit/e-commerce"
        tech_used={["React", "Redux", "MongoDB", "Express", "Node.js"]}
        project_image={Face}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-2"
      />
      <ProjectCard
        project_title="MERN - Real Time Interactive Web Application with Cloud Integration - Polly"
        project_description={[
          "Developed a real-time polling application using React for the frontend, incorporating Tailwind CSS for styling, Axios for HTTP requests, ",
          "and Chart.js for data visualization. The backend leverages AWS Lambda functions, Prisma ORM for database management, and Middy",
          "middleware for enhanced serverless function capabilities, serving multiple endpoints for creating rooms, questions, and fetching analytics"
          ]}
        project_url="https://github.com/arohanajit/polly"
        tech_used={["React","TypeScript","Tailwind CSS","AWS Lambda","Prisma ORM","Middy Middleware","Chart.js","Axios","Serverless Functions"]}
        project_image={FWMS}
        youtube_video_url="https://www.youtube.com/watch?v=your-video-id-3"
      />
    </div>
  );
};

export default Projects;

